name: "Move the Issue after workload and urgency is evaluated"

on:
  issues:
    types: [labeled]

jobs:
  evaluate:
    runs-on: ubuntu-latest
    outputs:
      WORKLOAD_SET: ${{ steps.check_workload.outputs.WORKLOAD_SET }}
      PRIORITY_SET: ${{ steps.check_urgency.outputs.PRIORITY_SET }}
      WORKLOAD: ${{ steps.check_workload.outputs.WORKLOAD }}
      PRIORITY: ${{ steps.check_urgency.outputs.PRIORITY }}
    steps:
      - name: "Check if workload is set"
        id: check_workload
        # Check if the issue has a workload label
        if: |
          contains(join(github.event.issue.labels.*.name, ','), 'workload:high') ||
          contains(join(github.event.issue.labels.*.name, ','), 'workload:medium') ||
          contains(join(github.event.issue.labels.*.name, ','), 'workload:low')
        run: |
            echo "WORKLOAD_SET=true" >> $GITHUB_OUTPUT
            # extract the workload value
            labels=$(echo '${{ toJSON(github.event.issue.labels) }}' | jq -r '.[].name')
            workload=$(echo "$labels" | grep -oE 'workload:(high|medium|low)' | cut -d: -f2)
            echo "WORKLOAD=$workload" >> $GITHUB_OUTPUT
      - name: "Check if priority is set"
        id: check_urgency
        # Check if the issue has a priority label
        if: |
          contains(join(github.event.issue.labels.*.name, ','), 'priority:high') ||
          contains(join(github.event.issue.labels.*.name, ','), 'priority:medium') ||
          contains(join(github.event.issue.labels.*.name, ','), 'priority:low')
        run: |
            echo "PRIORITY_SET=true" >> $GITHUB_OUTPUT
            # extract the priority value
            labels=$(echo '${{ toJSON(github.event.issue.labels) }}' | jq -r '.[].name')
            priority=$(echo "$labels" | grep -oE 'priority:(high|medium|low)' | cut -d: -f2)
            echo "PRIORITY=$priority" >> $GITHUB_OUTPUT

  move_card:
    needs: [evaluate]
    if: ${{ needs.evaluate.outputs.WORKLOAD_SET == 'true' && needs.evaluate.outputs.PRIORITY_SET == 'true' }}
    uses: ./.github/workflows/move_card.yml
    with:
        ISSUE_NODE_ID: ${{ github.event.issue.node_id }}
        COLUMN_NAME: "ToDo"
        PRIORITY: ${{ needs.evaluate.outputs.PRIORITY }}
        WORKLOAD: ${{ needs.evaluate.outputs.WORKLOAD }}
    secrets:
        PAT: ${{ secrets.TEST_SECRET }}

